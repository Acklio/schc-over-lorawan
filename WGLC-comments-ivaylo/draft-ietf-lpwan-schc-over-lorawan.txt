



lpwan Working Group                                      O. Gimenez, Ed.
Internet-Draft                                                   Semtech
Intended status: Informational                            I. Petrov, Ed.
Expires: November 8, 2020                                         Acklio
                                                            May 07, 2020


         Static Context Header Compression (SCHC) over LoRaWAN
               draft-ietf-lpwan-schc-over-lorawan-latest

Abstract

   The Static Context Header Compression (SCHC) specification describes
   generic header compression and fragmentation techniques for LPWAN
   (Low Power Wide Area Networks) technologies.  SCHC is a generic
   mechanism designed for great flexibility so that it can be adapted
   for any of the LPWAN technologies.

   This document provides the adaptation of SCHC for use in LoRaWAN
   networks, and provides elements such as efficient parameterization
   and modes of operation.  This is called a profile.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 8, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Gimenez & Petrov        Expires November 8, 2020                [Page 1]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Static Context Header Compression Overview  . . . . . . . . .   3
   4.  LoRaWAN Architecture  . . . . . . . . . . . . . . . . . . . .   5
     4.1.  End-Device classes (A, B, C) and interactions . . . . . .   6
     4.2.  End-Device addressing . . . . . . . . . . . . . . . . . .   7
     4.3.  General Message Types . . . . . . . . . . . . . . . . . .   7
     4.4.  LoRaWAN MAC Frames  . . . . . . . . . . . . . . . . . . .   8
     4.5.  Unicast and multicast technology  . . . . . . . . . . . .   8
   5.  SCHC-over-LoRaWAN . . . . . . . . . . . . . . . . . . . . . .   8
     5.1.  LoRaWAN FPort . . . . . . . . . . . . . . . . . . . . . .   8
     5.2.  Rule ID management  . . . . . . . . . . . . . . . . . . .   9
     5.3.  IID computation . . . . . . . . . . . . . . . . . . . . .  10
     5.4.  Padding . . . . . . . . . . . . . . . . . . . . . . . . .  11
     5.5.  Decompression . . . . . . . . . . . . . . . . . . . . . .  11
     5.6.  Fragmentation . . . . . . . . . . . . . . . . . . . . . .  11
       5.6.1.  DTag  . . . . . . . . . . . . . . . . . . . . . . . .  11
       5.6.2.  Uplink fragmentation: From device to SCHC gateway . .  12
       5.6.3.  Downlink fragmentation: From SCHC gateway to a device  15
   6.  Security considerations . . . . . . . . . . . . . . . . . . .  18
   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  18
   Contributors  . . . . . . . . . . . . . . . . . . . . . . . . . .  18
   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  19
     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  19
     9.2.  Informative References  . . . . . . . . . . . . . . . . .  20
   Appendix A.  Examples . . . . . . . . . . . . . . . . . . . . . .  21
     A.1.  Uplink - Compression example - No fragmentation . . . . .  21
     A.2.  Uplink - Compression and fragmentation example  . . . . .  21
     A.3.  Downlink  . . . . . . . . . . . . . . . . . . . . . . . .  23
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  25

1.  Introduction

   The Static Context Header Compression (SCHC) specification [RFC8724]
   describes generic header compression and fragmentation techniques
   that can be used on all LPWAN (Low Power Wide Area Networks)
   technologies defined in [RFC8376].  Even though those technologies
   share a great number of common features like star-oriented
   topologies, network architecture, devices with mostly quite




Gimenez & Petrov        Expires November 8, 2020                [Page 2]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   predictable communications, etc; they do have some slight differences
   in respect to payload sizes, reactiveness, etc.

   SCHC provides a generic framework that enables those devices to
   communicate with other Internet networks.  However, for efficient
   performance, some parameters and modes of operation need to be set
   appropriately for each of the LPWAN technologies.

   This document describes the efficient parameters and modes of
   operation when SCHC is used over LoRaWAN networks.

2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This section defines the terminology and acronyms used in this
   document.  For all other definitions, please look up the SCHC
   specification [RFC8724].

   o DevEUI: an IEEE EUI-64 identifier used to identify the end-device
   during the procedure while joining the network (Join Procedure)

   o DevAddr: a 32-bit non-unique identifier assigned to an end-device
   statically or dynamically after a Join Procedure (depending on the
   activation mode)

   o RCS: Reassembly Check Sequence.  Used to verify the integrity of
   the fragmentation-reassembly process

   o OUI: Organisation Unique Identifier.  IEEE assigned prefix for EUI

3.  Static Context Header Compression Overview

   This section contains a short overview of Static Context Header
   Compression (SCHC).  For a detailed description, refer to the full
   specification [RFC8724].

   It defines:

   1.  Compression mechanisms to avoid transport over the air of known
       data by both sender and receiver.  Known data is part of the
       "context".





Gimenez & Petrov        Expires November 8, 2020                [Page 3]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   2.  Fragmentation mechanisms to allow SCHC Packet transportation on
       small, and potentially variable, MTU

   Context exchange or pre-provisioning is out of scope of this
   document.

          Dev                                               App
  +----------------+                                +----+ +----+ +----+
  | App1 App2 App3 |                                |App1| |App2| |App3|
  |                |                                |    | |    | |    |
  |       UDP      |                                |UDP | |UDP | |UDP |
  |      IPv6      |                                |IPv6| |IPv6| |IPv6|
  |                |                                |    | |    | |    |
  |SCHC C/D and F/R|                                |    | |    | |    |
  +--------+-------+                                +----+ +----+ +----+
           |  +---+     +----+    +----+    +----+     .      .      .
           +~ |RGW| === |NGW | == |SCHC| == |SCHC|...... Internet ....
              +---+     +----+    |F/R |    |C/D |
                                  +----+    +----+

                          Figure 1: Architecture

   Figure 1 represents the architecture for compression/decompression,
   it is based on [RFC8376] terminology.  The Device is sending
   applications flows using IPv6 or IPv6/UDP protocols.  These flows
   might be compressed by a Static Context Header Compression
   Compressor/Decompressor (SCHC C/D) to reduce headers size and
   fragmented (SCHC F/R).  The resulting information is sent on a layer
   two (L2) frame to an LPWAN Radio Gateway (RGW) that forwards the
   frame to a Network Gateway (NGW).  The NGW sends the data to a SCHC
   F/R for defragmentation, if required, then to C/D for decompression.
   The C/D shares the same rules with the device.  The SCHC F/R and C/D
   can be located on the Network Gateway (NGW) or in another place as
   long as a tunnel is established between the NGW and the SCHC F/R,
   then SCHC F/R and SCHC C/D.  The SCHC C/D in both sides MUST share
   the same set of rules.  After decompression, the packet can be sent
   on the Internet to one or several LPWAN Application Servers (App).

   The SCHC F/R and SCHC C/D process is bidirectional, so the same
   principles can be applied in the other direction.

   In a LoRaWAN network, the RG is called a Gateway, the NGW is Network
   Server, and the SCHC C/D is an Application Server.  It can be
   provided by the Network Server or any third party software.  Figure 1
   can be mapped in LoRaWAN terminology to:






Gimenez & Petrov        Expires November 8, 2020                [Page 4]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


       Dev                                                  App
+--------------+                                    +----+ +----+ +----+
|App1 App2 App3|                                    |App1| |App2| |App3|
|              |                                    |    | |    | |    |
|      UDP     |                                    |UDP | |UDP | |UDP |
|     IPv6     |                                    |IPv6| |IPv6| |IPv6|
|              |                                    |    | |    | |    |
|SCHC C/D & F/R|                                    |    | |    | |    |
+-------+------+                                    +----+ +----+ +----+
        |  +-------+     +-------+    +-----------+    .      .      .
        +~ |Gateway| === |Network| == |Application|..... Internet ....
           +-------+     |server |    |server     |
                         +-------+    | F/R - C/D |
                                      +-----------+

               Figure 2: SCHC Architecture mapped to LoRaWAN

4.  LoRaWAN Architecture

   An overview of LoRaWAN [lora-alliance-spec] protocol and architecture
   is described in [RFC8376].  The mapping between the LPWAN
   architecture entities as described in [RFC8724] and the ones in
   [lora-alliance-spec] is as follows:

   o Devices (Dev) are the end-devices or hosts (e.g. sensors,
   actuators, etc.).  There can be a very high density of devices per
   radio gateway (LoRaWAN gateway).  This entity maps to the LoRaWAN
   End-Device.

   o The Radio Gateway (RGW), which is the endpoint of the constrained
   link.  This entity maps to the LoRaWAN Gateway.

   o The Network Gateway (NGW) is the interconnection node between the
   Radio Gateway and the Internet.  This entity maps to the LoRaWAN
   Network Server.

   o Application Server (App).  The same terminology is used in LoRaWAN.
   In that case, the application server will be the SCHC gateway, doing
   C/D and F/R.












Gimenez & Petrov        Expires November 8, 2020                [Page 5]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


       ()   ()   ()       |                      +------+
        ()  () () ()     / \       +---------+   | Join |
       () () () () ()   /   \======|    ^    |===|Server|  +-----------+
        () ()  ()      |           | <--|--> |   +------+  |Application|
       () ()  ()  ()  / \==========|    v    |=============|  Server   |
        ()  ()  ()   /   \         +---------+             +-----------+
       End-Devices  Gateways     Network Server


                       Figure 3: LPWAN Architecture

   SCHC C/D (Compressor/Decompressor) and SCHC F/R (Fragmentation/
   Reassembly) are performed on the LoRaWAN End-Device and the
   Application Server (called SCHC gateway).  While the point-to-point
   link between the End-Device and the Application Server constitutes
   single IP hop, the ultimate end-point of the IP communication may be
   an Internet node beyond the Application Server.  In other words, the
   LoRaWAN Application Server (SCHC gateway) acts as the first hop IP
   router for the End-Device.  The Application Server and Network Server
   may be co-located, which effectively turns the Network/Application
   Server into the first hop IP router.

4.1.  End-Device classes (A, B, C) and interactions

   The LoRaWAN MAC layer supports 3 classes of end-devices named A, B
   and C.  All end-devices implement the Class A, some end-devices may
   implement Class B or Class C.  Class B and Class C are mutually
   exclusive.

   o  Class A: The Class A is the simplest class of end-devices.  The
      end-device is allowed to transmit at any time, randomly selecting
      a communication channel.  The network may reply with a downlink in
      one of the 2 receive windows immediately following the uplinks.
      Therefore, the network cannot initiate a downlink, it has to wait
      for the next uplink from the end-device to get a downlink
      opportunity.  The Class A is the lowest power end-device class.

   o  Class B: Class B end-devices implement all the functionalities of
      Class A end-devices, but also schedule periodic listen windows.
      Therefore, opposed to the Class A end-devices, Class B end-devices
      can receive downlinks that are initiated by the network and not
      following an uplink.  There is a trade-off between the periodicity
      of those scheduled Class B listen windows and the power
      consumption of the end-device.  The lower the downlink latency,
      the higher the power consumption.

   o  Class C: Class C end-devices implement all the functionalities of
      Class A end-devices, but keep their receiver open whenever they



Gimenez & Petrov        Expires November 8, 2020                [Page 6]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


      are not transmitting.  Class C end-devices can receive downlinks
      at any time at the expense of a higher power consumption.
      Battery-powered end-devices can only operate in Class C for a
      limited amount of time (for example for a firmware upgrade over-
      the-air).  Most of the Class C end-devices are grid powered (for
      example Smart Plugs).

4.2.  End-Device addressing

   LoRaWAN end-devices use a 32-bit network address (devAddr) to
   communicate with the network over-the-air, this address might not be
   unique in a LoRaWAN network; end-devices using the same devAddr are
   distinguished by the Network Server based on the cryptographic
   signature appended to every LoRaWAN frame.

   To communicate with the SCHC gateway the Network Server MUST identify
   the end-devices by a unique 64-bit device identifier called the
   devEUI.

   The devEUI is assigned to the end-device during the manufacturing
   process by the end-device's manufacturer.  It is built like an
   Ethernet MAC address by concatenating the manufacturer's IEEE OUI
   field with a vendor unique number.  e.g.: 24-bit OUI is concatenated
   with a 40-bit serial number.  The Network Server translates the
   devAddr into a devEUI in the uplink direction and reciprocally on the
   downlink direction.

+--------+         +----------+        +---------+            +----------+
| End-   | <=====> | Network  | <====> | SCHC    | <========> | Internet |
| Device | devAddr | Server   | devEUI | Gateway |  IPv6/UDP  |          |
+--------+         +----------+        +---------+            +----------+


                        Figure 4: LoRaWAN addresses

4.3.  General Message Types

   o  Confirmed messages: The sender asks the receiver to acknowledge
      the message.

   o  Unconfirmed messages: The sender does not ask the receiver to
      acknowledge the message.

   As SCHC defines its own acknowledgment mechanisms, SCHC does not
   require to use confirmed messages.






Gimenez & Petrov        Expires November 8, 2020                [Page 7]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


4.4.  LoRaWAN MAC Frames

   o  JoinRequest: This message is used by an end-device to join a
      network.  It contains the end-device's unique identifier devEUI
      and a random nonce that will be used for session key derivation.

   o  JoinAccept: To on-board an end-device, the Network Server responds
      to the JoinRequest issued by an end-device with a JoinAccept
      message.  That message is encrypted with the end-device's AppKey
      and contains (amongst other fields) the major network's settings
      and a network random nonce used to derive the session keys.

   o  Data: MAC and application data.  Application data are protected
      with AES-128 encryption, MAC related data are AES-128 encrypted
      with another key.

4.5.  Unicast and multicast technology

   LoRaWAN technology supports unicast downlinks, but also multicast: a
   packet send over LoRaWAN radio link can be received by several
   devices.  It is useful to address many end-devices with same content,
   either a large binary file (firmware upgrade), or same command (e.g:
   lighting control).  As IPv6 is also a multicast technology this
   feature can be used to address a group of devices.

   _Note 1_: IPv6 multicast addresses must be defined as per [RFC4291].
   LoRaWAN multicast group definition in a network server and the
   relation between those groups and IPv6 groupID are out of scope of
   this document.

   _Note 2_: LoRa Alliance defined [lora-alliance-remote-multicast-set]
   as RECOMMENDED way to setup multicast groups on devices and create a
   synchronized reception window.

5.  SCHC-over-LoRaWAN

5.1.  LoRaWAN FPort

   The LoRaWAN MAC layer features a frame port field in all frames.
   This field (FPort) is 8 bits long and the values from 1 to 223 can be
   used.  It allows LoRaWAN networks and applications to identify data.

   The FPort field is part of the SCHC Message, as shown in Figure 5.
   The SCHC C/D and the SCHC F/R SHALL concatenate the FPort field with
   the LoRaWAN payload to retrieve their payload as it is used as a part
   of the RuleID field.





Gimenez & Petrov        Expires November 8, 2020                [Page 8]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   | FPort | LoRaWAN payload  |
   + ------------------------ +
   |       SCHC payload       |


                     Figure 5: SCHC Message in LoRaWAN

   A fragmentation session with application payload transferred from
   device to server, is called uplink fragmentation session.  It uses an
   FPort for data uplink and its associated SCHC control downlinks,
   named FPortUp in this document.  The other way, a fragmentation
   session with application payload transferred from server to device,
   is called downlink fragmentation session.  It uses another FPort for
   data downlink and its associated SCHC control uplinks, named
   FPortDown in this document.

   All ruleID can use arbitrary values inside the FPort range allowed by
   LoRaWAN specification and MUST be shared by the end-device and SCHC
   gateway prior to the communication with the selected rule.  The
   uplink and downlink fragmentation FPorts MUST be different.

5.2.  Rule ID management

   RuleID MUST be 8 bits, encoded in the LoRaWAN FPort as described in
   Section 5.1.  LoRaWAN supports up to 223 application FPorts in the
   range [1;223] as defined in section 4.3.2 of [lora-alliance-spec], it
   implies that RuleID MSB SHOULD be inside this range.  An application
   can send non SCHC traffic by using FPort values different from the
   ones used for SCHC.

   In order to improve interoperability RECOMMENDED fragmentation RuleID
   values are:

   o  RuleID = 20 (8-bit) for uplink fragmentation, named FPortUp

   o  RuleID = 21 (8-bit) for downlink fragmentation, named FPortDown

   o  RuleID = 22 (8-bit) for which SCHC compression was not possible
      (no matching rule was found)

   The remaining RuleIDs are available for compression.  RuleIDs are
   shared between uplink and downlink sessions.  A RuleID not in the
   set(s) of FPortUp or FPortDown means that the fragmentation is not
   used, thus, on reception, the SCHC Message MUST be sent to the C/D
   layer.

   The only uplink messages using the FPortDown port are the
   fragmentation SCHC control messages of a downlink fragmentation



Gimenez & Petrov        Expires November 8, 2020                [Page 9]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   session (for example, SCHC ACKs).  Similarly, the only downlink
   messages using the FPortUp port are the fragmentation SCHC control
   messages of an uplink fragmentation session.

   An application can have multiple fragmentation sessions between a
   device and one or several SCHC gateways.  A set of FPort values is
   REQUIRED for each SCHC gateway instance the device is required to
   communicate with.

   The mechanism for sharing those RuleID values is outside the scope of
   this document.

5.3.  IID computation

   In order to mitigate risks described in [RFC8064] and [RFC8065] IID
   MUST be created regarding the following algorithm:

   1.  key = LoRaWAN AppSKey

   2.  cmac = aes128_cmac(key, devEui)

   3.  IID = cmac[0..7]

   aes128_cmac algorithm is described in [RFC4493].  It has been chosen
   as it is already used by devices for LoRaWAN protocol.

   As AppSKey is renewed each time a device joins or rejoins a network,
   the IID will change over time; this mitigates privacy, location
   tracking and correlation over time risks.  Join periodicity is
   defined at the application level.

   Address scan risk is mitigated thanks to AES-128, which provides
   enough entropy bits of the IID.

   Using this algorithm will also ensure that there is no correlation
   between the hardware identifier (IEEE-64 devEUI) and the IID, so an
   attacker cannot use manufacturer OUI to target devices.

   Example with:

   o  devEui: 0x1122334455667788

   o  appSKey: 0x00AABBCCDDEEFF00AABBCCDDEEFFAABB








Gimenez & Petrov        Expires November 8, 2020               [Page 10]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   1. key: 0x00AABBCCDDEEFF00AABBCCDDEEFFAABB
   2. cmac: 0x4E822D9775B2649928F82066AF804FEC
   3. IID: 0x28F82066AF804FEC

                   Figure 6: Example of IID computation.

   There is a small probability of IID collision in a network, if such
   event occurs the IID can be changed by rekeying the device on L2
   level (ie: trigger a LoRaWAN join).  The way the device is rekeyed is
   out of scope of this document and left to the implementation.

5.4.  Padding

   All padding bits MUST be 0.

5.5.  Decompression

   SCHC C/D MUST concatenate FPort and LoRaWAN payload to retrieve the
   SCHC Packet as per Section 5.1.

   RuleIDs matching FPortUp and FPortDown are reserved for SCHC
   Fragmentation.

5.6.  Fragmentation

   The L2 Word Size used by LoRaWAN is 1 byte (8 bits).  The SCHC
   fragmentation over LoRaWAN uses the ACK-on-Error mode for uplink
   fragmentation and Ack-Always mode for downlink fragmentation.  A
   LoRaWAN end-device cannot support simultaneous interleaved
   fragmentation sessions in the same direction (uplink or downlink).

   The fragmentation parameters are different for uplink and downlink
   fragmentation sessions and are successively described in the next
   sections.

5.6.1.  DTag

   A LoRaWAN device cannot interleave several fragmented SCHC datagrams
   on the same FPort.  This field is not used and its size is 0.

   Note: The device can still have several parallel fragmentation
   sessions with one or more SCHC gateway(s) thanks to distinct sets of
   FPorts, cf Section 5.2








Gimenez & Petrov        Expires November 8, 2020               [Page 11]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


5.6.2.  Uplink fragmentation: From device to SCHC gateway

   In that case the device is the fragmentation transmitter, and the
   SCHC gateway the fragmentation receiver.  A single fragmentation rule
   is defined.  SCHC F/R MUST concatenate FPort and LoRaWAN payload to
   retrieve the SCHC Packet, as per Section 5.1.

   o  SCHC header size is two bytes (the FPort byte + 1 additional
      byte).

   o  RuleID: 8 bits stored in LoRaWAN FPort.

   o  SCHC fragmentation reliability mode: "ACK-on-Error"

   o  DTag: Size is 0 bit, not used

   o  FCN: The FCN field is encoded on N = 6 bits, so WINDOW_SIZE = 63
      tiles are allowed in a window

   o  Window index: encoded on W = 2 bits.  So 4 windows are available.

   o  RCS: Use recommended calculation algorithm in [RFC8724].

   o  MAX_ACK_REQUESTS: 8

   o  Tile: size is 10 bytes

   o  Retransmission timer: LoRaWAN end-devices MUST NOT implement a
      "retransmission timer", this changes the specification of
      [RFC8724], see Section 5.6.3.5.  It must transmit MAX_ACK_REQUESTS
      time the SCHC ACK REQ at it own timing; ie the periodicity between
      retransmission of SCHC ACK REQs is device specific and can vary
      depending on other application uplinks and regulations.

   o  Inactivity timer: The SCHC gateway implements an "inactivity
      timer".  The default RECOMMENDED duration of this timer is 12
      hours; this value is mainly driven by application requirements and
      MAY be changed by the application.

   o  Penultimate tile MUST be equal to the regular size.

   o  Last tile: it can be carried in a Regular SCHC Fragment, alone in
      an All-1 SCHC Fragment or with any of these two methods:
      implementation must ensure that:

      *  The sender MUST ascertain that the receiver will not receive
         the last tile through both a Regular SCHC Fragment and an All-1
         SCHC Fragment.



Gimenez & Petrov        Expires November 8, 2020               [Page 12]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


      *  If last tile is in All-1 message: current L2 MTU MUST be big
         enough to fit the All-1 and the last tile.

   With this set of parameters, the SCHC fragment header is 16 bits,
   including FPort; payload overhead will be 8 bits as FPort is already
   a part of LoRaWAN payload.  MTU is: _4 windows * 63 tiles * 10 bytes
   per tile = 2520 bytes_

   For battery powered SCHC sender, it is RECOMMENDED to use ACK
   mechanism at the end of each window instead of waiting the end of all
   windows:

   o  SCHC receiver SHOULD send a SCHC ACK after every window even if
      there is no missing tiles.

   o  SCHC sender SHOULD wait for the SCHC ACK from the SCHC receiver
      before sending tiles from next window.  If the SCHC ACK is not
      received, it SHOULD send an SCHC ACK REQ up to MAX_ACK_REQUESTS
      time as described previously.

   For non-battery powered devices, SCHC receiver MAY also choose to
   send a SCHC ACK only at the end of all windows.  It will reduce
   downlink load on the network, by reducing the number of downlinks.

   SCHC implementations MUST be compatible with both behavior, and
   selection is a part of the rule context.

5.6.2.1.  Regular fragments

   | FPort  |  LoRaWAN payload          |
   + ------ + ------------------------- +
   | RuleID |   W    | FCN    | Payload |
   + ------ + ------ + ------ + ------- +
   | 8 bits | 2 bits | 6 bits |         |


   Figure 7: All fragments except the last one.  SCHC header size is 16
                      bits, including LoRaWAN FPort.

5.6.2.2.  Last fragment (All-1)











Gimenez & Petrov        Expires November 8, 2020               [Page 13]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   | FPort  | LoRaWAN payload              |
   + ------ + ---------------------------- +
   | RuleID |   W    | FCN=All-1 |  RCS    |
   + ------ + ------ + --------- + ------- +
   | 8 bits | 2 bits | 6 bits    | 32 bits |


      Figure 8: All-1 fragment detailed format for the last fragment.

5.6.2.3.  SCHC ACK

   | FPort  | LoRaWAN payload                           |
   + ------ + ----------------------------------------- +
   | RuleID |   W   | C     | Encoded bitmap (if C = 0) |
   + ------ + ----- + ----- + ------------------------- +
   | 8 bits | 2 bit | 1 bit | 0 to 63 bits              |


               Figure 9: SCHC ACK format, failed RCS check.

5.6.2.4.  Receiver-Abort

   | FPort  | LoRaWAN payload                              |
   + ------ + -------------------------------------------- +
   | RuleID | W = b'11 | C = 1 | b'11111 | 0xFF (all 1's)  |
   + ------ + -------- + ------+-------- + ----------------+
   | 8 bits |  2 bits  | 1 bit | 5 bits  | 8 bits          |
                 next L2 Word boundary ->| <-- L2 Word --> |


                     Figure 10: Receiver-Abort format.

5.6.2.5.  SCHC acknowledge request

   | FPort  | LoRaWAN payload          |
   +------- +------------------------- +
   | RuleID | W      | FCN = b'000000  |
   + ------ + ------ + --------------- +
   | 8 bits | 2 bits | 6 bits          |



                      Figure 11: SCHC ACK REQ format.








Gimenez & Petrov        Expires November 8, 2020               [Page 14]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


5.6.3.  Downlink fragmentation: From SCHC gateway to a device

   In that case the device is the fragmentation receiver, and the SCHC
   gateway the fragmentation transmitter.  The following fields are
   common to all devices.  SCHC F/R MUST concatenate FPort and LoRaWAN
   payload to retrieve the SCHC Packet as described in Section 5.1.

   o  SCHC fragmentation reliability mode:

      *  Unicast downlinks: ACK-Always.

      *  Multicast downlinks: No-ACK, reliability has to be ensured by
         the upper layer.  This feature is OPTIONAL and may not be
         implemented by SCHC gateway.

   o  RuleID: 8 bits stored in LoRaWAN FPort.

   o  Window index (unicast only): encoded on W=1 bit, as per [RFC8724].

   o  DTag: Size is 0 bit, not used

   o  FCN: The FCN field is encoded on N=1 bit, so WINDOW_SIZE = 1 tile
      (FCN=All-1 is reserved for SCHC).

   o  RCS: Use recommended calculation algorithm in [RFC8724].

   o  MAX_ACK_REQUESTS: 8

   As only 1 tile is used, its size can change for each downlink, and
   will be maximum available MTU.

   _Note_: The Fpending bit included in LoRaWAN protocol SHOULD NOT be
   used for SCHC-over-LoRaWAN protocol.  It might be set by the Network
   Server for other purposes but not SCHC needs.

5.6.3.1.  Regular fragments

   | FPort  | LoRaWAN payload                      |
   + ------ + ------------------------------------ +
   | RuleID | W     | FCN = b'0 | Payload          |
   + ------ + ----- + --------- + ---------------- +
   | 8 bits | 1 bit | 1 bit     | X bytes + 6 bits |


     Figure 12: All fragments but the last one.  Header size 10 bits,
                         including LoraWAN FPort.





Gimenez & Petrov        Expires November 8, 2020               [Page 15]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


5.6.3.2.  Last fragment (All-1)

   | FPort  | LoRaWAN payload             |
   + ------ + --------------------------- +
   | RuleID | W     | FCN = b'1 | RCS     |
   + ------ + ----- + --------- + ------- +
   | 8 bits | 1 bit | 1 bit     | 32 bits |


             Figure 13: All-1 SCHC Message: the last fragment.

5.6.3.3.  SCHC acknowledge

   | FPort  | LoRaWAN payload                    |
   + ------ + ---------------------------------- +
   | RuleID | W     | C = b'1 | Padding b'000000 |
   + ------ + ----- + ------- + ---------------- +
   | 8 bits | 1 bit | 1 bit   | 6 bits           |


                Figure 14: SCHC ACK format, RCS is correct.

5.6.3.4.  Receiver-Abort

   | FPort  | LoRaWAN payload                                |
   + ------ + ---------------------------------------------- +
   | RuleID | W = b'1 | C = b'1 | b'111111 | 0xFF (all 1's)  |
   + ------ + ------- + ------- + -------- + --------------- +
   | 8 bits | 1 bit   | 1 bits  | 6 bits   | 8 bits          |
                   next L2 Word boundary ->| <-- L2 Word --> |



    Figure 15: Receiver-Abort packet (following an All-1 SCHC Fragment
                           with incorrect RCS).

   Class A and Class B or Class C end-devices do not manage
   retransmissions and timers in the same way.

5.6.3.5.  Class A end-devices

   Class A end-devices can only receive in an RX slot following the
   transmission of an uplink.  Therefore there cannot be a concept of
   "retransmission timer" for an SCHC gateway.  The SCHC gateway cannot
   initiate communication to a Class A end-device.

   The device replies with an ACK message to every single fragment
   received from the SCHC gateway (because the window size is 1).



Gimenez & Petrov        Expires November 8, 2020               [Page 16]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   Following the reception of a FCN=0 fragment (fragment that is not the
   last fragment of the packet or SCHC ACK REQ, but the end of a
   window), the device MUST transmit the SCHC ACK fragment until it
   receives the fragment of the next window.  The device SHALL transmit
   up to MAX_ACK_REQUESTS ACK messages before aborting.  The device
   should transmit those ACK as soon as possible while taking into
   consideration potential local radio regulation on duty-cycle, to
   progress the fragmentation session as quickly as possible.  The ACK
   bitmap is 1 bit long and is always 1.

   Following the reception of an FCN=All-1 fragment (the last fragment
   of a datagram) and if the RCS is correct, the device SHALL transmit
   the ACK with the "RCS is correct" indicator bit set (C=1).  This
   message might be lost therefore the SCHC gateway MAY request a
   retransmission of this ACK in the next downlink.  The device SHALL
   keep this ACK message in memory until it receives a downlink, on SCHC
   FPortDown from the SCHC gateway different from an SCHC ACK REQ: it
   indicates that the SCHC gateway has received the ACK message.

   The fragmentation sender (the SCHC gateway) implements an inactivity
   timer with a default duration of 12 hours.  Once a fragmentation
   session is started, if the SCHC gateway has not received any ACK or
   Receiver-Abort message 12 hours after the last message from the
   device was received, the SCHC gateway MAY flush the fragmentation
   context.  For devices with very low transmission rates (example 1
   packet a day in normal operation) , that duration may be extended,
   but this is application specific.

5.6.3.6.  Class B or Class C end-devices

   Class B and Class C end-devices can receive in scheduled RX slots or
   in RX slots following the transmission of an uplink.  The device
   replies with an ACK message to every single fragment received from
   the SCHC gateway (because the window size is 1).  Following the
   reception of an FCN=0 fragment (fragment that is not the last
   fragment of the packet or SCHC ACK REQ), the device MUST always
   transmit the corresponding SCHC ACK message even if that fragment has
   already been received.  The ACK bitmap is 1 bit long and is always 1.
   If the SCHC gateway receives this ACK, it proceeds to send the next
   window fragment.  If the retransmission timer elapses and the SCHC
   gateway has not received the ACK of the current window it retransmits
   the last fragment.  The SCHC gateway tries retransmitting up to
   MAX_ACK_REQUESTS times before aborting.

   Following the reception of an FCN=All-1 fragment (the last fragment
   of a datagram) and if the RCS is correct, the device SHALL transmit
   the ACK with the "RCS is correct" indicator bit set.  If the SCHC




Gimenez & Petrov        Expires November 8, 2020               [Page 17]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   gateway receives this ACK, the current fragmentation session has
   succeeded and its context can be cleared.

   If the retransmission timer elapses and the SCHC gateway has not
   received the SCHC ACK it retransmits the last fragment with the
   payload (not an SCHC ACK REQ without payload).  The SCHC gateway
   tries retransmitting up to MAX_ACK_REQUESTS times before aborting.

   Following the reception of an FCN=All-1 fragment (the last fragment
   of a datagram), if all fragments have been received and if the RCS is
   NOT correct, the device SHALL transmit a Receiver-Abort fragment.
   The retransmission timer is used by the SCHC gateway (the sender),
   the optimal value is very much application specific but here are some
   recommended default values.  For Class B end-devices, this timer
   trigger is a function of the periodicity of the Class B ping slots.
   The RECOMMENDED value is equal to 3 times the Class B ping slot
   periodicity.  For Class C end-devices which are nearly constantly
   receiving, the RECOMMENDED value is 30 seconds.  This means that the
   end-device shall try to transmit the ACK within 30 seconds of the
   reception of each fragment.  The inactivity timer is implemented by
   the end-device to flush the context in case it receives nothing from
   the SCHC gateway over an extended period of time.  The RECOMMENDED
   value is 12 hours for both Class B and Class C end-devices.

6.  Security considerations

   This document is only providing parameters that are expected to be
   better suited for LoRaWAN networks for [RFC8724].  IID security is
   discussed in Section 5.3.  As such, this document does not contribute
   to any new security issues in addition to those identified in
   [RFC8724].  Moreover SCHC data (LoRaWAN payload) are protected on
   LoRaWAN level by an AES-128 encryption with key shared by device and
   SCHC gateway.  Those keys are renew each LoRaWAN session (ie: each
   join or rejoin to the network)

Acknowledgements

   Thanks to all those listed in the Contributors section for the
   excellent text, insightful discussions, reviews and suggestions, and
   also to (in alphabetical order) Dominique Barthel, Arunprabhu
   Kandasamy, Rodrigo Munoz, Alexander Pelov, Pascal Thubert, Laurent
   Toutain for useful design considerations, reviews and comments.

Contributors

   Contributors ordered by family name.

   Vincent Audebert



Gimenez & Petrov        Expires November 8, 2020               [Page 18]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   EDF R&D
   Email: vincent.audebert@edf.fr

   Julien Catalano
   Kerlink
   Email: j.catalano@kerlink.fr

   Michael Coracin
   Semtech
   Email: mcoracin@semtech.com

   Marc Le Gourrierec
   Sagemcom
   Email: marc.legourrierec@sagemcom.com

   Nicolas Sornin
   Semtech
   Email: nsornin@semtech.com

   Alper Yegin
   Actility
   Email: alper.yegin@actility.com

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC3385]  Sheinwald, D., Satran, J., Thaler, P., and V. Cavanna,
              "Internet Protocol Small Computer System Interface (iSCSI)
              Cyclic Redundancy Check (CRC)/Checksum Considerations",
              RFC 3385, DOI 10.17487/RFC3385, September 2002,
              <https://www.rfc-editor.org/info/rfc3385>.

   [RFC4291]  Hinden, R. and S. Deering, "IP Version 6 Addressing
              Architecture", RFC 4291, DOI 10.17487/RFC4291, February
              2006, <https://www.rfc-editor.org/info/rfc4291>.

   [RFC4493]  Song, JH., Poovendran, R., Lee, J., and T. Iwata, "The
              AES-CMAC Algorithm", RFC 4493, DOI 10.17487/RFC4493, June
              2006, <https://www.rfc-editor.org/info/rfc4493>.






Gimenez & Petrov        Expires November 8, 2020               [Page 19]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,
              "Transmission of IPv6 Packets over IEEE 802.15.4
              Networks", RFC 4944, DOI 10.17487/RFC4944, September 2007,
              <https://www.rfc-editor.org/info/rfc4944>.

   [RFC5795]  Sandlund, K., Pelletier, G., and L-E. Jonsson, "The RObust
              Header Compression (ROHC) Framework", RFC 5795,
              DOI 10.17487/RFC5795, March 2010,
              <https://www.rfc-editor.org/info/rfc5795>.

   [RFC7136]  Carpenter, B. and S. Jiang, "Significance of IPv6
              Interface Identifiers", RFC 7136, DOI 10.17487/RFC7136,
              February 2014, <https://www.rfc-editor.org/info/rfc7136>.

   [RFC8064]  Gont, F., Cooper, A., Thaler, D., and W. Liu,
              "Recommendation on Stable IPv6 Interface Identifiers",
              RFC 8064, DOI 10.17487/RFC8064, February 2017,
              <https://www.rfc-editor.org/info/rfc8064>.

   [RFC8065]  Thaler, D., "Privacy Considerations for IPv6 Adaptation-
              Layer Mechanisms", RFC 8065, DOI 10.17487/RFC8065,
              February 2017, <https://www.rfc-editor.org/info/rfc8065>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8376]  Farrell, S., Ed., "Low-Power Wide Area Network (LPWAN)
              Overview", RFC 8376, DOI 10.17487/RFC8376, May 2018,
              <https://www.rfc-editor.org/info/rfc8376>.

   [RFC8724]  Minaburo, A., Toutain, L., Gomez, C., Barthel, D., and JC.
              Zuniga, "SCHC: Generic Framework for Static Context Header
              Compression and Fragmentation", RFC 8724,
              DOI 10.17487/RFC8724, April 2020,
              <https://www.rfc-editor.org/info/rfc8724>.

9.2.  Informative References

   [lora-alliance-remote-multicast-set]
              Alliance, L., "LoRaWAN Remote Multicast Setup
              Specification Version 1.0.0", <https://lora-
              alliance.org/sites/default/files/2018-09/
              remote_multicast_setup_v1.0.0.pdf>.







Gimenez & Petrov        Expires November 8, 2020               [Page 20]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   [lora-alliance-spec]
              Alliance, L., "LoRaWAN Specification Version V1.0.3",
              <https://lora-alliance.org/sites/default/files/2018-07/
              lorawan1.0.3.pdf>.

Appendix A.  Examples

A.1.  Uplink - Compression example - No fragmentation

   This example represents an applicative payload going through SCHC
   over LoRaWAN, no fragmentation required

   An applicative payload of 78 bytes is passed to SCHC compression
   layer.  Rule 1 is used by C/D layer, allowing to compress it to 40
   bytes and 5 bits: 1 byte RuleID, 21 bits residue + 37 bytes payload.

   | RuleID | Compression residue |  Payload  | Padding=b'000 |
   + ------ + ------------------- + --------- + ------------- +
   |   1    |       21 bits       |  37 bytes |    3 bits     |

                  Figure 16: Uplink example: SCHC Message

   The current LoRaWAN MTU is 51 bytes, although 2 bytes FOpts are used
   by LoRaWAN protocol: 49 bytes are available for SCHC payload; no need
   for fragmentation.  The payload will be transmitted through FPort =
   1.

 | LoRaWAN Header            | LoRaWAN payload (40 bytes)              |
 + ------------------------- + --------------------------------------- +
 |      |  FOpts  | RuleID=1 | Compression | Payload   | Padding=b'000 |
 |      |         |          | residue     |           |               |
 + ---- + ------- + -------- + ----------- + --------- + ------------- +
 | XXXX | 2 bytes | 1 byte   | 21 bits     |  37 bytes |    3 bits     |

                 Figure 17: Uplink example: LoRaWAN packet

A.2.  Uplink - Compression and fragmentation example

   This example represents an applicative payload going through SCHC,
   with fragmentation.

   An applicative payload of 478 bytes is passed to SCHC compression
   layer.  Rule 1 is used by C/D layer, allowing to compress it to 282
   bytes and 5 bits: 1 byte RuleID, 21 bits residue + 279 bytes payload.







Gimenez & Petrov        Expires November 8, 2020               [Page 21]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   | RuleID | Compression residue |  Payload  |
   + ------ + ------------------- + --------- +
   |   1    |       21 bits       | 279 bytes |

                  Figure 18: Uplink example: SCHC Message

   The current LoRaWAN MTU is 11 bytes, 0 bytes FOpts are used by
   LoRaWAN protocol: 11 bytes are available for SCHC payload + 1 byte
   FPort field.  SCHC header is 2 bytes (including FPort) so 1 tile is
   sent in first fragment.

   | LoRaWAN Header             | LoRaWAN payload (11 bytes) |
   + -------------------------- + -------------------------- +
   |                | RuleID=20 |   W   |  FCN   |  1 tile   |
   + -------------- + --------- + ----- + ------ + --------- +
   |       XXXX     | 1 byte    | 0   0 |   62   | 10 bytes  |

                Figure 19: Uplink example: LoRaWAN packet 1

   Content of the tile is:
   | RuleID | Compression residue |  Payload          |
   + ------ + ------------------- + ----------------- +
   |   1    |       21 bits       |  6 byte + 3 bits  |

        Figure 20: Uplink example: LoRaWAN packet 1 - Tile content

   Next transmission MTU is 11 bytes, although 2 bytes FOpts are used by
   LoRaWAN protocol: 9 bytes are available for SCHC payload + 1 byte
   FPort field, a tile does not fit inside so LoRaWAN stack will send
   only FOpts.

   Next transmission MTU is 242 bytes, 4 bytes FOpts. 23 tiles are
   transmitted:

 | LoRaWAN Header                        | LoRaWAN payload (231 bytes) |
 + --------------------------------------+ --------------------------- +
 |                |  FOpts  | RuleID=20  |   W   |  FCN  |  23 tiles   |
 + -------------- + ------- + ---------- + ----- + ----- + ----------- +
 |       XXXX     | 4 bytes |  1 byte    | 0   0 |   61  | 230 bytes   |

                Figure 21: Uplink example: LoRaWAN packet 2

   Next transmission MTU is 242 bytes, no FOpts.  All 5 remaining tiles
   are transmitted, the last tile is only 2 bytes + 5 bits.  Padding is
   added for the remaining 3 bits.






Gimenez & Petrov        Expires November 8, 2020               [Page 22]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


| LoRaWAN Header    | LoRaWAN payload (44 bytes)                        |
+ ---- + -----------+ ------------------------------------------------- +
|      | RuleID=20  |   W   |  FCN  |     5 tiles       | Padding=b'000 |
+ ---- + ---------- + ----- + ----- + ----------------- + ------------- +
| XXXX | 1 byte     | 0   0 |   38  | 42 bytes + 5 bits |    3 bits     |

                Figure 22: Uplink example: LoRaWAN packet 3

   Then All-1 message can be transmitted:

   | LoRaWAN Header    | LoRaWAN payload (44 bytes) |
   + ---- + -----------+ -------------------------- +
   |      | RuleID=20  |   W   |  FCN  |     RCS    |
   + ---- + ---------- + ----- + ----- + ---------- +
   | XXXX | 1 byte     | 0   0 |   63  |  4 bytes   |

        Figure 23: Uplink example: LoRaWAN packet 4 - All-1 message

   All packets have been received by the SCHC gateway, computed RCS is
   correct so the following ACK is sent to the device by the SCHC
   receiver:

   | LoRaWAN Header             | LoRaWAN payload     |
   + -------------- + --------- + ------------------- +
   |                | RuleID=20 |   W   | C | Padding |
   + -------------- + --------- + ----- + - + ------- +
   |       XXXX     | 1 byte    | 0   0 | 1 | 5 bits  |

          Figure 24: Uplink example: LoRaWAN packet 5 - SCHC ACK

A.3.  Downlink

   An applicative payload of 443 bytes is passed to SCHC compression
   layer.  Rule 1 is used by C/D layer, allowing to compress it to 130
   bytes and 5 bits: 1 byte RuleID, 21 bits residue + 127 bytes payload.

   | RuleID | Compression residue |  Payload  |
   + ------ + ------------------- + --------- +
   |   1    |       21 bits       | 127 bytes |

                 Figure 25: Downlink example: SCHC Message

   The current LoRaWAN MTU is 51 bytes, no FOpts are used by LoRaWAN
   protocol: 51 bytes are available for SCHC payload + FPort field => it
   has to be fragmented.






Gimenez & Petrov        Expires November 8, 2020               [Page 23]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


   | LoRaWAN Header    | LoRaWAN payload (51 bytes)             |
   + ---- + ---------- + -------------------------------------- +
   |      | RuleID=21  |  W = 0 | FCN = 0 |       1 tile        |
   + ---- + ---------- + ------ + ------- + ------------------- +
   | XXXX | 1 byte     |  1 bit |  1 bit  | 50 bytes and 6 bits |

      Figure 26: Downlink example: LoRaWAN packet 1 - SCHC Fragment 1

   Content of the tile is:

   | RuleID | Compression residue |        Payload     |
   + ------ + ------------------- + ------------------ +
   |   1    |       21 bits       | 48 bytes and 1 bit |

        Figure 27: Downlink example: LoRaWAN packet 1: Tile content

   The receiver answers with a SCHC ACK:

   | LoRaWAN Header   | LoRaWAN payload                  |
   + ---- + --------- + -------------------------------- +
   |      | RuleID=21 | W = 0 | C = 1 | Padding=b'000000 |
   + ---- + --------- + ----- + ----- + ---------------- +
   | XXXX |  1 byte   | 1 bit | 1 bit |     6 bits       |

         Figure 28: Downlink example: LoRaWAN packet 2 - SCHC ACK

   The second downlink is sent, two FOpts:

 | LoRaWAN Header              |  LoRaWAN payload (49 bytes)           |
 + --------------------------- + ------------------------------------- +
 |      |  FOpts  | RuleID=21  | W = 1 | FCN = 0 |        1 tile       |
 + ---- + ------- + ---------- + ----- + ------- + ------------------- +
 | XXXX | 2 bytes | 1 byte     | 1 bit |  1 bit  | 48 bytes and 6 bits |

      Figure 29: Downlink example: LoRaWAN packet 3 - SCHC Fragment 2

   The receiver answers with an SCHC ACK:

   | LoRaWAN Header   | LoRaWAN payload                  |
   + ---- + --------- + -------------------------------- +
   |      | RuleID=21 | W = 1 | C = 1 | Padding=b'000000 |
   + ---- + --------- + ----- + ----- + ---------------- +
   | XXXX |  1 byte   | 1 bit | 1 bit |     6 bits       |

         Figure 30: Downlink example: LoRaWAN packet 4 - SCHC ACK

   The last downlink is sent, no FOpts:




Gimenez & Petrov        Expires November 8, 2020               [Page 24]

Internet-Draft              SCHC-over-LoRaWAN                   May 2020


| LoRaWAN Header   | LoRaWAN payload (37 bytes)                                        |
+ ---- + --------- + ----------------------------------------------------------------- +
|      | RuleID=21 |  W = 0  | FCN = 1 |   RCS   |      1 tile       | Padding=b'00000 |
+ ---- + --------- + ------- + ------- + ------- + ----------------- + --------------- +
| XXXX | 1 byte    |  1 bit  |  1 bit  | 4 bytes | 31 bytes + 1 bits |     5 bits      |

        Figure 31: Uplink example: LoRaWAN packet 5 - All-1 message

   The receiver answers to the sender with an SCHC ACK:

   | LoRaWAN Header   | LoRaWAN payload                  |
   + ---- + --------- + -------------------------------- +
   |      | RuleID=21 | W = 0 | C = 1 | Padding=b'000000 |
   + ---- + --------- + ----- + ----- + ---------------- +
   | XXXX |  1 byte   | 1 bit | 1 bit |     6 bits       |

          Figure 32: Uplink example: LoRaWAN packet 6 - SCHC ACK

Authors' Addresses

   Olivier Gimenez (editor)
   Semtech
   14 Chemin des Clos
   Meylan
   France

   Email: ogimenez@semtech.com


   Ivaylo Petrov (editor)
   Acklio
   1137A Avenue des Champs Blancs
   35510 Cesson-Sevigne Cedex
   France

   Email: ivaylo@ackl.io















Gimenez & Petrov        Expires November 8, 2020               [Page 25]
